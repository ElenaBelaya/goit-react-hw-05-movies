{"version":3,"file":"static/js/133.487b0352.chunk.js","mappings":"4TACAA,IAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAW,mCAEJC,EAAS,mCAAG,oGACAF,IAAAA,IAAA,sCAAyCC,IADzC,cACjBE,EADiB,yBAEhBA,EAASC,MAFO,2CAAH,qDAKTC,EAAgB,mCAAG,WAAMC,GAAN,uFACPN,IAAAA,IAAA,+BACGC,EADH,kBACqBK,IAFd,cACxBH,EADwB,yBAIvBA,EAASC,MAJc,2CAAH,sDAOhBG,EAAa,mCAAG,WAAMC,GAAN,uFACJR,IAAAA,IAAA,gBAAmBQ,EAAnB,oBAAuCP,IADnC,cACrBE,EADqB,yBAEpBA,EAASC,MAFW,2CAAH,sDAKbK,EAAgB,mCAAG,WAAMD,GAAN,uFACPR,IAAAA,IAAA,iBACXQ,EADW,4BACiBP,IAFV,cACxBE,EADwB,yBAIvBA,EAASC,MAJc,2CAAH,sDAOhBM,EAAmB,mCAAG,WAAMF,GAAN,uFACVR,IAAAA,IAAA,iBACXQ,EADW,4BACiBP,IAFP,cAC3BE,EAD2B,yBAI1BA,EAASC,MAJiB,2CAAH,qD,yHCiBhC,UAxCgB,WACd,IAAQI,GAAaG,EAAAA,EAAAA,MAAbH,SACR,GAA0BI,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,2FACED,GAAW,GADb,kBAGwBE,EAAAA,GAAwBV,GAHhD,OAGUK,EAHV,OAIIC,EAASD,GAJb,gDAMIM,QAAQC,IAAI,KAAMC,SANtB,yBAQIL,GAAW,GARf,6EADc,uBAAC,WAAD,wBAYdM,EACD,GAAE,CAACd,KAGF,4BACGO,IAAW,SAAC,IAAD,IACXF,IACC,wBACGA,EAAMU,QAAQC,KAAI,SAAAC,GAAG,OACpB,2BACE,uBAAIA,EAAIC,UACR,uBAAID,EAAIE,YAFDF,EAAIG,GADO,MAQD,IAAxBf,EAAMgB,gBACL,sEAIP,C","sources":["services/app.js","views/Reviews.js"],"sourcesContent":["import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst BASE_KEY = '3c9b3437ebab156a512248e157c99300';\n\nexport const getMovies = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${BASE_KEY}`);\n  return response.data;\n};\n\nexport const getMoviesByQuery = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${BASE_KEY}&query=${query}`\n  );\n  return response.data;\n};\n\nexport const getMoviesById = async moviesId => {\n  const response = await axios.get(`movie/${moviesId}?api_key=${BASE_KEY}`);\n  return response.data;\n};\n\nexport const getMoviesForCast = async moviesId => {\n  const response = await axios.get(\n    `/movie/${moviesId}/credits?api_key=${BASE_KEY}`\n  );\n  return response.data;\n};\n\nexport const getMoviesForReviews = async moviesId => {\n  const response = await axios.get(\n    `/movie/${moviesId}/reviews?api_key=${BASE_KEY}`\n  );\n  return response.data;\n};\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport * as API from '../services/app';\nimport Loader from '../components/Loader/Loader';\n\nconst Reviews = () => {\n  const { moviesId } = useParams();\n  const [movie, setMovie] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    async function fetchMovieForReviews() {\n      setLoading(true);\n      try {\n        const movie = await API.getMoviesForReviews(moviesId);\n        setMovie(movie);\n      } catch (error) {\n        console.log(error.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchMovieForReviews();\n  }, [moviesId]);\n\n  return (\n    <main>\n      {loading && <Loader />}\n      {movie && (\n        <ul>\n          {movie.results.map(mov => (\n            <li key={mov.id}>\n              <b>{mov.author}</b>\n              <p>{mov.content}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n      {movie.total_results === 0 && (\n        <p>We don't have any reviews for this movie</p>\n      )}\n    </main>\n  );\n};\n\nexport default Reviews;\n"],"names":["axios","BASE_KEY","getMovies","response","data","getMoviesByQuery","query","getMoviesById","moviesId","getMoviesForCast","getMoviesForReviews","useParams","useState","movie","setMovie","loading","setLoading","useEffect","API","console","log","message","fetchMovieForReviews","results","map","mov","author","content","id","total_results"],"sourceRoot":""}