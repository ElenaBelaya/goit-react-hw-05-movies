{"version":3,"file":"static/js/517.88221abf.chunk.js","mappings":"gUACAA,IAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAW,mCAEJC,EAAS,mCAAG,oGACAF,IAAAA,IAAA,sCAAyCC,IADzC,cACjBE,EADiB,yBAEhBA,EAASC,MAFO,2CAAH,qDAKTC,EAAgB,mCAAG,WAAMC,GAAN,uFACPN,IAAAA,IAAA,+BACGC,EADH,kBACqBK,IAFd,cACxBH,EADwB,yBAIvBA,EAASC,MAJc,2CAAH,sDAOhBG,EAAa,mCAAG,WAAMC,GAAN,uFACJR,IAAAA,IAAA,gBAAmBQ,EAAnB,oBAAuCP,IADnC,cACrBE,EADqB,yBAEpBA,EAASC,MAFW,2CAAH,sDAKbK,EAAgB,mCAAG,WAAMD,GAAN,uFACPR,IAAAA,IAAA,iBACXQ,EADW,4BACiBP,IAFV,cACxBE,EADwB,yBAIvBA,EAASC,MAJc,2CAAH,sDAOhBM,EAAmB,mCAAG,WAAMF,GAAN,uFACVR,IAAAA,IAAA,iBACXQ,EADW,4BACiBP,IAFP,cAC3BE,EAD2B,yBAI1BA,EAASC,MAJiB,2CAAH,qD,mJCsEhC,UArFqB,WAAO,IAAD,EACzB,GAA0BO,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQL,GAAaM,EAAAA,EAAAA,MAAbN,SACFO,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,EAAY,OAAGF,QAAH,IAAGA,GAAH,UAAGA,EAAUG,aAAb,aAAG,EAAiBC,MAEtCC,EAAAA,EAAAA,YAAU,WAAM,wCACd,6GAEwBC,EAAAA,GAAkBf,GAF1C,OAEUI,EAFV,OAGIC,EAASD,GAHb,gDAKIY,QAAQC,IAAI,KAAMC,SALtB,0DADc,uBAAC,WAAD,wBASdC,EACD,GAAE,CAACnB,IAEJ,IAIQoB,EAA6DhB,EAA7DgB,YAAaC,EAAgDjB,EAAhDiB,MAAOC,EAAyClB,EAAzCkB,aAAcC,EAA2BnB,EAA3BmB,SAAUC,EAAiBpB,EAAjBoB,aAEpD,OACE,iCACIpB,IAAS,SAAC,IAAD,IACVA,IACC,4BACE,UAAC,EAAAqB,OAAD,CAAQC,KAAK,SAASC,QAXb,WAAO,IAAD,IACrBpB,EAAQ,iBAACE,QAAD,IAACA,GAAD,UAACA,EAAUG,aAAX,aAAC,EAAiBC,YAAlB,QAA0B,IACnC,EASO,WACE,SAAC,MAAD,IADF,eAIA,UAAC,EAAAe,SAAD,YACE,gBACEC,IAAG,wCAAmCT,GACtCU,IAAKT,KAEP,UAAC,EAAAU,YAAD,YACE,0BACGV,EADH,KACYC,EAAaU,OAAO,EAAG,GADnC,QAGA,wCAAgBC,KAAKC,MAAqB,GAAfV,GAA3B,SACA,uCACA,6BAAKD,MACL,qCACA,uBACGnB,GACCA,EAAM+B,OAAOC,KAAI,SAAAC,GAAI,OACnB,gCAAsBA,EAAKC,KAA3B,MAAWD,EAAKE,GADG,gBAQjC,mBACA,mDACA,2BACE,yBACE,SAAC,KAAD,CAAMC,GAAG,OAAO5B,MAAO,CAAEC,KAAMF,GAA/B,qBAIF,yBACE,SAAC,KAAD,CAAM6B,GAAG,UAAU5B,MAAO,CAAEC,KAAMF,GAAlC,2BAKJ,mBACA,SAAC,EAAA8B,SAAD,CACEC,UACE,0BACE,SAAC,IAAD,MAHN,UAOE,SAAC,KAAD,QAIP,C,8JC9FYd,EAAWe,EAAAA,EAAAA,IAAH,8DAKRZ,EAAcY,EAAAA,EAAAA,IAAH,8CAIXlB,EAASkB,EAAAA,EAAAA,OAAH,2C","sources":["services/app.js","views/MovieDetails.js","views/MovieDetails.styled.jsx"],"sourcesContent":["import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst BASE_KEY = '3c9b3437ebab156a512248e157c99300';\n\nexport const getMovies = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${BASE_KEY}`);\n  return response.data;\n};\n\nexport const getMoviesByQuery = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${BASE_KEY}&query=${query}`\n  );\n  return response.data;\n};\n\nexport const getMoviesById = async moviesId => {\n  const response = await axios.get(`movie/${moviesId}?api_key=${BASE_KEY}`);\n  return response.data;\n};\n\nexport const getMoviesForCast = async moviesId => {\n  const response = await axios.get(\n    `/movie/${moviesId}/credits?api_key=${BASE_KEY}`\n  );\n  return response.data;\n};\n\nexport const getMoviesForReviews = async moviesId => {\n  const response = await axios.get(\n    `/movie/${moviesId}/reviews?api_key=${BASE_KEY}`\n  );\n  return response.data;\n};\n","import {\n  useParams,\n  Outlet,\n  Link,\n  useLocation,\n  useNavigate,\n} from 'react-router-dom';\nimport { useState, useEffect, Suspense } from 'react';\nimport * as API from '../services/app';\nimport Loader from '../components/Loader/Loader';\nimport { BiCaretLeft } from 'react-icons/bi';\nimport { FilmCard, Description, Button } from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState('');\n  const { moviesId } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const backLinkHref = location?.state?.from;\n\n  useEffect(() => {\n    async function fetchMoviesById() {\n      try {\n        const movie = await API.getMoviesById(moviesId);\n        setMovie(movie);\n      } catch (error) {\n        console.log(error.message);\n      }\n    }\n    fetchMoviesById();\n  }, [moviesId]);\n\n  const onGoBack = () => {\n    navigate(location?.state?.from ?? '/');\n  };\n\n  const { poster_path, title, release_date, overview, vote_average } = movie;\n\n  return (\n    <>\n      {!movie && <Loader />}\n      {movie && (\n        <div>\n          <Button type=\"button\" onClick={onGoBack}>\n            <BiCaretLeft /> Go back\n          </Button>\n\n          <FilmCard>\n            <img\n              src={`http://image.tmdb.org/t/p/w200${poster_path}`}\n              alt={title}\n            />\n            <Description>\n              <h2>\n                {title} ({release_date.substr(0, 4)})\n              </h2>\n              <p>User score: {Math.round(vote_average * 10)} %</p>\n              <h3>Overview:</h3>\n              <p> {overview}</p>\n              <h3>Genres:</h3>\n              <p>\n                {movie &&\n                  movie.genres.map(item => (\n                    <span key={item.id}> {item.name} </span>\n                  ))}\n              </p>\n            </Description>\n          </FilmCard>\n        </div>\n      )}\n      <hr />\n      <p>Additional information</p>\n      <ul>\n        <li>\n          <Link to=\"cast\" state={{ from: backLinkHref }}>\n            Cast\n          </Link>\n        </li>\n        <li>\n          <Link to=\"reviews\" state={{ from: backLinkHref }}>\n            Reviews\n          </Link>\n        </li>\n      </ul>\n      <hr />\n      <Suspense\n        fallback={\n          <div>\n            <Loader />\n          </div>\n        }\n      >\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import styled from '@emotion/styled';\n\nexport const FilmCard = styled.div`\n  display: flex;\n  margin-top: 5px;\n`;\n\nexport const Description = styled.div`\n  margin-left: 15px;\n`;\n\nexport const Button = styled.button`\n  margin-top: 5px;\n`;\n"],"names":["axios","BASE_KEY","getMovies","response","data","getMoviesByQuery","query","getMoviesById","moviesId","getMoviesForCast","getMoviesForReviews","useState","movie","setMovie","useParams","navigate","useNavigate","location","useLocation","backLinkHref","state","from","useEffect","API","console","log","message","fetchMoviesById","poster_path","title","release_date","overview","vote_average","Button","type","onClick","FilmCard","src","alt","Description","substr","Math","round","genres","map","item","name","id","to","Suspense","fallback","styled"],"sourceRoot":""}