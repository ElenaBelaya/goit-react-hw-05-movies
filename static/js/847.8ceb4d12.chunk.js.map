{"version":3,"file":"static/js/847.8ceb4d12.chunk.js","mappings":"4TACAA,IAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAW,mCAEJC,EAAS,mCAAG,oGACAF,IAAAA,IAAA,sCAAyCC,IADzC,cACjBE,EADiB,yBAEhBA,EAASC,MAFO,2CAAH,qDAKTC,EAAgB,mCAAG,WAAMC,GAAN,uFACPN,IAAAA,IAAA,+BACGC,EADH,kBACqBK,IAFd,cACxBH,EADwB,yBAIvBA,EAASC,MAJc,2CAAH,sDAOhBG,EAAa,mCAAG,WAAMC,GAAN,uFACJR,IAAAA,IAAA,gBAAmBQ,EAAnB,oBAAuCP,IADnC,cACrBE,EADqB,yBAEpBA,EAASC,MAFW,2CAAH,sDAKbK,EAAgB,mCAAG,WAAMD,GAAN,uFACPR,IAAAA,IAAA,iBACXQ,EADW,4BACiBP,IAFV,cACxBE,EADwB,yBAIvBA,EAASC,MAJc,2CAAH,sDAOhBM,EAAmB,mCAAG,WAAMF,GAAN,uFACVR,IAAAA,IAAA,iBACXQ,EADW,4BACiBP,IAFP,cAC3BE,EAD2B,yBAI1BA,EAASC,MAJiB,2CAAH,qD,kIC4ChC,UAnEA,WAAmB,IAAD,EAChB,GAA4BO,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAAuCC,EAAAA,EAAAA,MAAvC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MACXd,EAAK,UAAGW,EAAaI,IAAI,gBAApB,QAAgC,GA2B3C,OAzBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,uFACgB,KAAVhB,EADN,wDAIES,GAAW,GAJb,kBAMyBQ,EAAAA,GAAqBjB,GAN9C,OAMUM,EANV,OAOIC,EAAUD,EAAOY,SAPrB,kDASIC,QAAQC,IAAI,KAAMC,SATtB,yBAWIZ,GAAW,GAXf,8EADc,uBAAC,WAAD,wBAeda,EACD,GAAE,CAACtB,KAUF,6BACE,kBAAMuB,SATa,SAAAC,GACrBA,EAAMC,iBACN,IAAMC,EAAOF,EAAMG,cACnBf,EAAe,CAAEZ,MAAO0B,EAAKE,SAAS5B,MAAM6B,QAC5CH,EAAKI,OACN,EAIG,WACE,kBACEC,KAAK,OACLC,KAAK,QACLC,YAAajC,GAAgB,mBAE/B,mBAAQ+B,KAAK,SAAb,uBAGDvB,IAAW,SAAC,IAAD,IACXF,IACC,wBACGA,EAAO4B,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKF,GAAMG,MAAO,CAAEC,KAAM1B,GAAlC,SACGuB,KAFID,EADC,OAShB,SAAC,EAAAK,SAAD,CACEC,UACE,0BACE,SAAC,IAAD,MAHN,UAOE,SAAC,KAAD,QAIP,C","sources":["services/app.js","views/MovieList.js"],"sourcesContent":["import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst BASE_KEY = '3c9b3437ebab156a512248e157c99300';\n\nexport const getMovies = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${BASE_KEY}`);\n  return response.data;\n};\n\nexport const getMoviesByQuery = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${BASE_KEY}&query=${query}`\n  );\n  return response.data;\n};\n\nexport const getMoviesById = async moviesId => {\n  const response = await axios.get(`movie/${moviesId}?api_key=${BASE_KEY}`);\n  return response.data;\n};\n\nexport const getMoviesForCast = async moviesId => {\n  const response = await axios.get(\n    `/movie/${moviesId}/credits?api_key=${BASE_KEY}`\n  );\n  return response.data;\n};\n\nexport const getMoviesForReviews = async moviesId => {\n  const response = await axios.get(\n    `/movie/${moviesId}/reviews?api_key=${BASE_KEY}`\n  );\n  return response.data;\n};\n","import { Outlet, Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { useEffect, useState, Suspense } from 'react';\nimport Loader from '../components/Loader/Loader';\nimport * as API from '../services/app';\n\nfunction Movies() {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [searchParams, setSeachParams] = useSearchParams();\n  const location = useLocation();\n  const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    async function searchMovies() {\n      if (query === '') {\n        return;\n      }\n      setLoading(true);\n      try {\n        const movies = await API.getMoviesByQuery(query);\n        setMovies(movies.results);\n      } catch (error) {\n        console.log(error.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    searchMovies();\n  }, [query]);\n\n  const handleFilmName = event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    setSeachParams({ query: form.elements.query.value });\n    form.reset();\n  };\n\n  return (\n    <main>\n      <form onSubmit={handleFilmName}>\n        <input\n          type=\"text\"\n          name=\"query\"\n          placeholder={query ? query : 'Search movies'}\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n\n      {loading && <Loader />}\n      {movies && (\n        <ul>\n          {movies.map(({ id, title }) => (\n            <li key={id}>\n              <Link to={`${id}`} state={{ from: location }}>\n                {title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n      <Suspense\n        fallback={\n          <div>\n            <Loader />\n          </div>\n        }\n      >\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n}\nexport default Movies;\n"],"names":["axios","BASE_KEY","getMovies","response","data","getMoviesByQuery","query","getMoviesById","moviesId","getMoviesForCast","getMoviesForReviews","useState","movies","setMovies","loading","setLoading","useSearchParams","searchParams","setSeachParams","location","useLocation","get","useEffect","API","results","console","log","message","searchMovies","onSubmit","event","preventDefault","form","currentTarget","elements","value","reset","type","name","placeholder","map","id","title","to","state","from","Suspense","fallback"],"sourceRoot":""}